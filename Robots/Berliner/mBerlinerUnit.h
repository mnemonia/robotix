
/*********************************************************************
	SYSTEM Berliner
	IMPLEMENTATION Arduino
	Header File for CIP MACHINE mBerlinerUnit
	Filename: mBerlinerUnit.h
	generated by CIP Tool(R) Version 4.41.00
		August 17, 2012  4:31:43 am
	activated code options:
		PENDING_ information
		'unsigned char' for 'enum'
		C-code
*********************************************************************/

#ifndef _MHEADER
#define _MHEADER

/* Include Files */

#include <stdlib.h>
#include "sBerlinerUnit.h"

/* Macro Definitions */

#ifndef FALSE
#define FALSE 0
#endif

#ifndef TRUE
#define TRUE 1
#endif


/* Outpulse Types */

struct tOUTPLS_Calibration
{
	unsigned char  name_;
};

struct tOUTPLS_Drive
{
	unsigned char  name_;
};

union tOUTPLS_Locomotion
{
	struct tOUTPLS_Calibration OUTPLS_Calibration;
	struct tOUTPLS_Drive OUTPLS_Drive;
};

/* Global Output Type */

struct tCHAN_SteeringChannel
{
	unsigned char name_;
};

struct tCHAN_MotorChannel
{
	unsigned char name_;
};

union tCHNOUT_mBerlinerUnit
{
	struct tCHAN_MotorChannel CHAN_MotorChannel;
	struct tCHAN_SteeringChannel CHAN_SteeringChannel;
};

/* Timer- and Queue-Element */

struct tTMEL_mBerlinerUnit
{
	unsigned char set_; /* Boolean */
	unsigned long end_;
};

struct tTMQE_mBerlinerUnit
{
	struct tTMQE_mBerlinerUnit *preced_;
	struct tTMQE_mBerlinerUnit *next_;
	int proctype_;
};

/* Global Table Elements */

struct tTIMING_mBerlinerUnit
{
	void  (*tkhndl_) (void);
	void  (*tuhndl_) (void);
	int  set_;
};

/* Types for Process Calibration */

struct tPRSTAT_Calibration
{
	unsigned char STATE;
};

union tSTATUS_Calibration
{
	struct tPRSTAT_Calibration write_access_;
	const struct tPRSTAT_Calibration read_access_;
};

struct tPRINST_Calibration
{
	struct tTMEL_mBerlinerUnit timer_;
	struct tTMQE_mBerlinerUnit timeup_;
};

/* Types for Process Drive */

struct tPRSTAT_Drive
{
	unsigned char STATE;
};

union tSTATUS_Drive
{
	struct tPRSTAT_Drive write_access_;
	const struct tPRSTAT_Drive read_access_;
};

/* Types for Process Motor */

struct tPRSTAT_Motor
{
	unsigned char STATE;
};

union tSTATUS_Motor
{
	struct tPRSTAT_Motor write_access_;
	const struct tPRSTAT_Motor read_access_;
};

/* Types for Process Steering */

struct tPRSTAT_Steering
{
	unsigned char STATE;
};

union tSTATUS_Steering
{
	struct tPRSTAT_Steering write_access_;
	const struct tPRSTAT_Steering read_access_;
};

#endif 

/*********************************************************************
	End of Header File for CIP MACHINE mBerlinerUnit
*********************************************************************/
