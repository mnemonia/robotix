
/*********************************************************************
	SYSTEM Boesewicht
	IMPLEMENTATION ArduinoImplementation
	Header File for CIP MACHINE mBoesewicht
	Filename: mBoesewicht.h
	generated by CIP Tool(R) Version 4.41.00
		September 19, 2012  12:35:52 am
	activated code options:
		PENDING_ information
		'unsigned char' for 'enum'
		C-code
*********************************************************************/

#ifndef _MHEADER
#define _MHEADER

/* Include Files */

#include <stdlib.h>
#include "sBoesewicht.h"

/* Macro Definitions */

#ifndef FALSE
#define FALSE 0
#endif

#ifndef TRUE
#define TRUE 1
#endif


/* Outpulse Types */

struct tOUTPLS_Controller
{
	unsigned char  name_;
};

struct tOUTPLS_Initialize
{
	unsigned char  name_;
};

struct tOUTPLS_WaveWings
{
	unsigned char  name_;
};

struct tOUTPLS_WingController
{
	unsigned char  name_;
};

union tOUTPLS_Robot
{
	struct tOUTPLS_Controller OUTPLS_Controller;
	struct tOUTPLS_Initialize OUTPLS_Initialize;
	struct tOUTPLS_WaveWings OUTPLS_WaveWings;
	struct tOUTPLS_WingController OUTPLS_WingController;
};

/* Global Output Type */

struct tCHAN_EyeOutChannel
{
	unsigned char name_;
};

struct tCHAN_WingControllerOutC
{
	unsigned char name_;
};

struct tCHAN_WingLeftChannel
{
	unsigned char name_;
};

struct tCHAN_WingRightChannel
{
	unsigned char name_;
};

struct tCHAN_MouthOutChannel
{
	unsigned char name_;
};

union tCHNOUT_mBoesewicht
{
	struct tCHAN_EyeOutChannel CHAN_EyeOutChannel;
	struct tCHAN_MouthOutChannel CHAN_MouthOutChannel;
	struct tCHAN_WingControllerOutC CHAN_WingControllerOutC;
	struct tCHAN_WingLeftChannel CHAN_WingLeftChannel;
	struct tCHAN_WingRightChannel CHAN_WingRightChannel;
};

/* Timer- and Queue-Element */

struct tTMEL_mBoesewicht
{
	unsigned char set_; /* Boolean */
	unsigned long end_;
};

struct tTMQE_mBoesewicht
{
	struct tTMQE_mBoesewicht *preced_;
	struct tTMQE_mBoesewicht *next_;
	int proctype_;
};

/* Global Table Elements */

struct tTIMING_mBoesewicht
{
	void  (*tkhndl_) (void);
	void  (*tuhndl_) (void);
	int  set_;
};

/* Types for Process Controller */

struct tPRSTAT_Controller
{
	unsigned char STATE;
};

union tSTATUS_Controller
{
	struct tPRSTAT_Controller write_access_;
	const struct tPRSTAT_Controller read_access_;
};

/* Types for Process Eyes */

struct tPRSTAT_Eyes
{
	unsigned char STATE;
};

union tSTATUS_Eyes
{
	struct tPRSTAT_Eyes write_access_;
	const struct tPRSTAT_Eyes read_access_;
};

/* Types for Process Initialize */

struct tPRSTAT_Initialize
{
	unsigned char STATE;
};

union tSTATUS_Initialize
{
	struct tPRSTAT_Initialize write_access_;
	const struct tPRSTAT_Initialize read_access_;
};

struct tPRINST_Initialize
{
	struct tTMEL_mBoesewicht timer_;
	struct tTMQE_mBoesewicht timeup_;
};

/* Types for Process Mouth */

struct tPRSTAT_Mouth
{
	unsigned char STATE;
};

union tSTATUS_Mouth
{
	struct tPRSTAT_Mouth write_access_;
	const struct tPRSTAT_Mouth read_access_;
};

/* Types for Process WaveWings */

struct tPRSTAT_WaveWings
{
	unsigned char STATE;
};

union tSTATUS_WaveWings
{
	struct tPRSTAT_WaveWings write_access_;
	const struct tPRSTAT_WaveWings read_access_;
};

struct tPRINST_WaveWings
{
	struct tTMEL_mBoesewicht timer_;
	struct tTMQE_mBoesewicht timeup_;
};

/* Types for Process WingController */

struct tPRSTAT_WingController
{
	unsigned char STATE;
};

union tSTATUS_WingController
{
	struct tPRSTAT_WingController write_access_;
	const struct tPRSTAT_WingController read_access_;
};

/* Types for Process WingLeft */

struct tPRSTAT_WingLeft
{
	unsigned char STATE;
};

union tSTATUS_WingLeft
{
	struct tPRSTAT_WingLeft write_access_;
	const struct tPRSTAT_WingLeft read_access_;
};

/* Types for Process WingRight */

struct tPRSTAT_WingRight
{
	unsigned char STATE;
};

union tSTATUS_WingRight
{
	struct tPRSTAT_WingRight write_access_;
	const struct tPRSTAT_WingRight read_access_;
};

#endif 

/*********************************************************************
	End of Header File for CIP MACHINE mBoesewicht
*********************************************************************/
