
/*********************************************************************
	SYSTEM Chaot
	IMPLEMENTATION ChaotImpl
	Header File for CIP MACHINE mChaotUnit
	Filename: mChaotUnit.h
	generated by CIP Tool(R) Version 4.41.00
		May 1, 2012  3:31:51 am
	activated code options:
		PENDING_ information
		'unsigned char' for 'enum'
		C-code
*********************************************************************/

#ifndef _MHEADER
#define _MHEADER

/* Include Files */

#include <stdlib.h>
#include "sChaotUnit.h"

/* Macro Definitions */

#ifndef FALSE
#define FALSE 0
#endif

#ifndef TRUE
#define TRUE 1
#endif


/* Outpulse Types */

struct tOUTPLS_Chaotic
{
	unsigned char  name_;
};

struct tOUTPLS_Controller
{
	unsigned char  name_;
};

struct tOUTPLS_Indicator
{
	unsigned char  name_;
};

struct tOUTPLS_Measure
{
	unsigned char  name_;
	union 
	{
		struct tCIPREC_Results _Results; /* Type of : MEASURED */
	} data_;
};

struct tOUTPLS_Shaker
{
	unsigned char  name_;
};

union tOUTPLS_Robot
{
	struct tOUTPLS_Chaotic OUTPLS_Chaotic;
	struct tOUTPLS_Controller OUTPLS_Controller;
	struct tOUTPLS_Indicator OUTPLS_Indicator;
	struct tOUTPLS_Measure OUTPLS_Measure;
	struct tOUTPLS_Shaker OUTPLS_Shaker;
};

/* Global Output Type */

struct tCHAN_MeasureActions
{
	unsigned char name_;
};

struct tCHAN_ShakerActions
{
	unsigned char name_;
};

struct tCHAN_IndicatorActions
{
	unsigned char name_;
	union tDATA_IndicatorActions data_;
};

struct tCHAN_ChaoticActions
{
	unsigned char name_;
};

struct tCHAN_ControllerActions
{
	unsigned char name_;
};

union tCHNOUT_mChaotUnit
{
	struct tCHAN_ChaoticActions CHAN_ChaoticActions;
	struct tCHAN_ControllerActions CHAN_ControllerActions;
	struct tCHAN_IndicatorActions CHAN_IndicatorActions;
	struct tCHAN_MeasureActions CHAN_MeasureActions;
	struct tCHAN_ShakerActions CHAN_ShakerActions;
};

/* Timer- and Queue-Element */

struct tTMEL_mChaotUnit
{
	unsigned char set_; /* Boolean */
	unsigned long end_;
};

struct tTMQE_mChaotUnit
{
	struct tTMQE_mChaotUnit *preced_;
	struct tTMQE_mChaotUnit *next_;
	int proctype_;
};

/* Global Table Elements */

struct tTIMING_mChaotUnit
{
	void  (*tkhndl_) (void);
	void  (*tuhndl_) (void);
	int  set_;
};

/* Types for Process Chaotic */

struct tPRSTAT_Chaotic
{
	unsigned char STATE;
};

union tSTATUS_Chaotic
{
	struct tPRSTAT_Chaotic write_access_;
	const struct tPRSTAT_Chaotic read_access_;
};

/* Types for Process Controller */

struct tPRSTAT_Controller
{
	unsigned char STATE;
};

union tSTATUS_Controller
{
	struct tPRSTAT_Controller write_access_;
	const struct tPRSTAT_Controller read_access_;
};

struct tPRINST_Controller
{
	struct tTMEL_mChaotUnit timer_;
	struct tTMQE_mChaotUnit timeup_;
};

/* Types for Process Indicator */

struct tPRSTAT_Indicator
{
	unsigned char STATE;
};

union tSTATUS_Indicator
{
	struct tPRSTAT_Indicator write_access_;
	const struct tPRSTAT_Indicator read_access_;
};

/* Types for Process Measure */

struct tPRSTAT_Measure
{
	unsigned char STATE;
};

union tSTATUS_Measure
{
	struct tPRSTAT_Measure write_access_;
	const struct tPRSTAT_Measure read_access_;
};

/* Types for Process Shaker */

struct tPRSTAT_Shaker
{
	unsigned char STATE;
};

union tSTATUS_Shaker
{
	struct tPRSTAT_Shaker write_access_;
	const struct tPRSTAT_Shaker read_access_;
};

struct tPRINST_Shaker
{
	struct tTMEL_mChaotUnit timer_;
	struct tTMQE_mChaotUnit timeup_;
};

#endif 

/*********************************************************************
	End of Header File for CIP MACHINE mChaotUnit
*********************************************************************/
